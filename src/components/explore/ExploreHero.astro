---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../FormattedDate.astro";
// import { date } from "astro/zod";

interface Props {
	content: CollectionEntry<"explore">;
}

const {
	content: { data, render },
} = Astro.props;

const { remarkPluginFrontmatter } = await render();

const dateTimeOptions: Intl.DateTimeFormatOptions = {
	month: "long",
};
---

<h1 class="title mb-3 sm:mb-1" transition:name={data.title}>{data.title}</h1>
<div class="flex flex-wrap items-center gap-x-3 gap-y-2">
	<p class="font-semibold">
		<FormattedDate date={data.publishDate} dateTimeOptions={dateTimeOptions} /> /{" "}
		{remarkPluginFrontmatter.minutesRead}
	</p>
	{
		data.updatedDate && (
			<span class="rounded-lg bg-quote/10 p-1 text-quote">
				Last Updated:
				<FormattedDate class="ms-1" date={data.updatedDate} dateTimeOptions={dateTimeOptions} />
			</span>
		)
	}
</div>

{
	data.coverImage && (
		<a href={data.url} class="aspect-h-9 aspect-w-16 my-6 block overflow-hidden rounded-lg">
			<img
				src={data.coverImage.src}
				alt={data.coverImage.alt}
				class={data.coverImage.fit === "contain" ? "object-contain" : "object-cover"}
				loading="eager"
				fetchpriority="high"
			/>
		</a>
	)
}
